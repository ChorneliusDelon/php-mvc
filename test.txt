// App.js
import React from "react";
import { BrowserRouter, Switch, Route } from "react-router-dom";
import Navbar from "./components/Navbar";
import Home from "./pages/Home";
import Profile from "./pages/Profile";
import Upload from "./pages/Upload";

function App() {
  return (
    <BrowserRouter>
      <Navbar />
      <Switch>
        <Route exact path="/" component={Home} />
        <Route path="/profile/:id" component={Profile} />
        <Route path="/upload" component={Upload} />
      </Switch>
    </BrowserRouter>
  );
}

export default App;

// Navbar.js
import React from "react";
import { Link } from "react-router-dom";

function Navbar() {
  return (
    <nav>
      <Link to="/">Home</Link>
      <Link to="/profile/1">Profile</Link>
      <Link to="/upload">Upload</Link>
    </nav>
  );
}

export default Navbar;

// Home.js
import React, { useEffect, useState } from "react";
import { db } from "../firebase";

function Home() {
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    db.collection("posts")
      .orderBy("timestamp", "desc")
      .onSnapshot((snapshot) => {
        setPosts(
          snapshot.docs.map((doc) => ({
            id: doc.id,
            data: doc.data(),
          }))
        );
      });
  }, []);

  return (
    <div>
      <h1>Home</h1>
      {posts.map((post) => (
        <div key={post.id}>
          <img src={post.data.image} alt="Post" />
          <p>{post.data.caption}</p>
        </div>
      ))}
    </div>
  );
}

export default Home;

// Profile.js
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { db } from "../firebase";

function Profile() {
  const { id } = useParams();
  const [user, setUser] = useState(null);
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    db.collection("users")
      .doc(id)
      .get()
      .then((doc) => {
        if (doc.exists) {
          setUser(doc.data());
        }
      });
  }, [id]);

  useEffect(() => {
    db.collection("posts")
      .where("userId", "==", id)
      .orderBy("timestamp", "desc")
      .onSnapshot((snapshot) => {
        setPosts(
          snapshot.docs.map((doc) => ({
            id: doc.id,
            data: doc.data(),
          }))
        );
      });
  }, [id]);

  return (
    <div>
      <h1>Profile</h1>
      {user && (
        <div>
          <img src={user.photo} alt="User" />
          <p>{user.name}</p>
        </div>
      )}
      {posts.map((post) => (
        <div key={post.id}>
          <img src={post.data.image} alt="Post" />
          <p>{post.data.caption}</p>
        </div>
      ))}
    </div>
  );
}

export default Profile;

// Upload.js
import React, { useState } from "react";
import { storage, db } from "../firebase";
import firebase from "firebase";

function Upload() {
  const [image, setImage] = useState(null);
  const [caption, setCaption] = useState("");
  const [progress, setProgress] = useState(0);

  const handleChange = (e) => {
    if (e.target.files[0]) {
      setImage(e.target.files[0]);
    }
  };

  const handleUpload = () => {
    const uploadTask = storage.ref(`images/${image.name}`).put(image);

    uploadTask.on(
      "state_changed",
      (snapshot) => {
        const progress = Math.round(
          (snapshot.bytesTransferred / snapshot.totalBytes) * 100
        );
        setProgress(progress);
      },
      (error) => {
        console.log(error);
      },
      () => {
        storage
          .ref("images")
          .child(image.name)
          .getDownloadURL()
          .then((url) => {
            db.collection("posts").add({
              image: url,
              caption: caption,
              userId: "1",
              timestamp: firebase.firestore.FieldValue.serverTimestamp(),
            });
            setProgress(0);
            setCaption("");
            setImage(null);
          });
      }
    );
  };

  return (
    <div>
      <h1>Upload</h1>
      <input type="file" onChange={handleChange} />
      <input
        type="text"
        placeholder="Enter a caption"
        value={caption}
        onChange={(e) => setCaption(e.target.value)}
      />
      <button onClick={handleUpload}>Upload</button>
      <progress value={progress} max="100" />
    </div>
  );
}

export default Upload;

// firebase.js
import firebase from "firebase";

const firebaseConfig = {
  // Your firebase configuration here
};

const firebaseApp = firebase.initializeApp(firebaseConfig);

const db = firebaseApp.firestore();
const storage = firebaseApp.storage();

export { db, storage };
